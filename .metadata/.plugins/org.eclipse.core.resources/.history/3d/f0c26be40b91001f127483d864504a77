package com.example.pdfgenerator.service;

import com.example.pdfgenerator.model.PdfRequest;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.thymeleaf.spring5.SpringTemplateEngine;
import org.thymeleaf.context.Context;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;

import com.itextpdf.html2pdf.HtmlConverter;

@Service
public class PdfService {

    @Value("${pdf.storage.path}")
    private String pdfStoragePath;

    private final SpringTemplateEngine templateEngine;

    public PdfService(SpringTemplateEngine templateEngine) {
        this.templateEngine = templateEngine;
    }

    public String generatePdf(PdfRequest pdfRequest) throws IOException {
        String fileName = pdfRequest.getSeller().replaceAll(" ", "_") + "_" + System.currentTimeMillis() + ".pdf";
        String filePath = pdfStoragePath + File.separator + fileName;

        Context context = new Context();
        context.setVariable("seller", pdfRequest.getSeller());
        context.setVariable("sellerAddress", pdfRequest.getSellerAddress());
        context.setVariable("sellerGstin", pdfRequest.getSellerGstin());
        context.setVariable("buyer", pdfRequest.getBuyer());
        context.setVariable("buyerAddress", pdfRequest.getBuyerAddress());
        context.setVariable("buyerGstin", pdfRequest.getBuyerGstin());
        context.setVariable("items", pdfRequest.getItems());

        String htmlContent = templateEngine.process("pdfTemplate", context);
        
        try (FileOutputStream outputStream = new FileOutputStream(filePath)) {
            HtmlConverter.convertToPdf(htmlContent, outputStream);
        }

        return fileName; // Return only the file name for download
    }
}
