package com.example.pdfgenerator.service;

import com.example.pdfgenerator.model.PdfRequest;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

@Service
public class PdfService {

    @Value("${pdf.storage.path}")
    private String pdfStoragePath;

    public String generatePdf(PdfRequest pdfRequest) throws IOException {
        String fileName = pdfRequest.getSeller().replaceAll(" ", "_") + "_" + System.currentTimeMillis() + ".pdf";
        String filePath = pdfStoragePath + File.separator + fileName;

        // Create PDF document
        Document document = new Document();
        try {
            PdfWriter.getInstance(document, new FileOutputStream(filePath));
            document.open();

            // Add content
            document.add(new Paragraph("Seller: " + pdfRequest.getSeller()));
            document.add(new Paragraph("Address: " + pdfRequest.getSellerAddress()));
            document.add(new Paragraph("GSTIN: " + pdfRequest.getSellerGstin()));
            document.add(new Paragraph("\nBuyer: " + pdfRequest.getBuyer()));
            document.add(new Paragraph("Address: " + pdfRequest.getBuyerAddress()));
            document.add(new Paragraph("GSTIN: " + pdfRequest.getBuyerGstin()));
            document.add(new Paragraph("\nItems:"));

            // Add table headers
            document.add(new Paragraph("Item\tQuantity\tRate\tAmount"));
            pdfRequest.getItems().forEach(item -> {
                try {
                    document.add(new Paragraph(item.getName() + "\t" + item.getQuantity() + "\t" + item.getRate() + "\t" + item.getAmount()));
                } catch (DocumentException e) {
                    e.printStackTrace();
                }
            });
        } catch (DocumentException e) {
            e.printStackTrace();
        } finally {
            document.close();
        }

        return fileName; // Return only the file name for download
    }
}
